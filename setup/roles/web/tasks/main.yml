---
- name: Import the GPG key for a custom nginx repository
  become: yes
  apt_key:
    url=http://nginx.org/keys/nginx_signing.key
    state=present

- name: Add a custom repository for nginx
  become: yes
  apt_repository:
    repo='deb http://nginx.org/packages/mainline/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx'
    state=present

- name: Install nginx
  become: yes
  apt:
    name=nginx
    state=latest
    update_cache=yes

- name: Setup the default configuration for nginx
  become: yes
  copy:
    src=nginx.conf
    dest=/etc/nginx/nginx.conf
  notify: restart nginx

- name: Create a directory to store SSL files
  become: yes
  file:
    path=/etc/nginx/ssl
    state=directory

- name: Copy over SSL files
  become: yes
  copy:
    src={{ item }}
    dest=/etc/nginx/ssl/
  with_fileglob:
    - ssl/*

- name: Setup the folders to hold site-specific nginx configuration
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
  notify: restart nginx

- name: Configure nginx to start on boot
  become: yes
  service:
    name=nginx
    enabled=yes

- name: Create a folder to house the site content
  file:
    path: "/home/{{ remote_user_name }}/{{ domain_name }}"
    state: directory

- name: Setup this website as one of the available nginx sites
  become: yes
  template:
    src=site.j2
    dest=/etc/nginx/sites-available/{{ domain_name }}
  notify: restart nginx

- name: Setup this website as one of the enabled nginx sites
  become: yes
  file:
    src=/etc/nginx/sites-available/{{ domain_name }}
    dest=/etc/nginx/sites-enabled/{{ domain_name }}
    state=link
  notify: restart nginx

- name: Configure firewall rules to allow HTTP(S)
  become: yes
  ufw:
    rule={{ item.rule }}
    port={{ item.port }}
    proto={{ item.proto }}
  with_items:
    - { rule: 'allow', port: '80', proto: 'tcp' }
    - { rule: 'allow', port: '443', proto: 'tcp' }
